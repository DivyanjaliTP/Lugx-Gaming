name: Deploy Blue-Green to Kubernetes

on:
  workflow_dispatch:  # run manually from the Actions tab for now

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Single SSH step (no manual known_hosts or ssh-agent needed)
      - name: Deploy via SSH to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            cd ~/lugx_Gaming-CW || exit 1
            git pull

            echo "[1/4] Apply BLUE deployments"
            kubectl apply -f k8s/blue-green/game-service-blue.yaml
            kubectl apply -f k8s/blue-green/order-service-blue.yaml
            kubectl apply -f k8s/blue-green/analytics-service-blue.yaml

            echo "[2/4] Wait for readiness"
            kubectl rollout status deploy/game-service-blue --timeout=120s
            kubectl rollout status deploy/order-service-blue --timeout=120s
            kubectl rollout status deploy/analytics-service-blue --timeout=120s

            echo "[3/4] Flip Services to BLUE"
            kubectl patch svc game-service      -p '{"spec":{"selector":{"app":"game-service","version":"blue"}}}'
            kubectl patch svc order-service     -p '{"spec":{"selector":{"app":"order-service","version":"blue"}}}'
            kubectl patch svc analytics-service -p '{"spec":{"selector":{"app":"analytics-service","version":"blue"}}}'

            echo "[4/4] Scale down GREEN (if any)"
            kubectl scale deploy game-service-green --replicas=0 || true
            kubectl scale deploy order-service-green --replicas=0 || true
            kubectl scale deploy analytics-service-green --replicas=0 || true

            echo "âœ… Blue-Green deploy finished."
